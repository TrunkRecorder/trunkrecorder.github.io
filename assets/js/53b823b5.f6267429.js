"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[430],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3857:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},l=void 0,i={unversionedId:"notes/CALL-HANDLING",id:"notes/CALL-HANDLING",title:"CALL-HANDLING",description:"Use Mermaid Live to edit the charts.",source:"@site/docs/notes/CALL-HANDLING.md",sourceDirName:"notes",slug:"/notes/CALL-HANDLING",permalink:"/docs/notes/CALL-HANDLING",draft:!1,editUrl:"https://github.com/TrunkRecorder/trunkrecorder.github.io/tree/main/docs/notes/CALL-HANDLING.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Adjusting Squelch for Conventional Systems",permalink:"/docs/SQUELCH"},next:{title:"Plugin System",permalink:"/docs/notes/PLUGIN-SYSTEM"}},s={},c=[],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Use ",(0,a.kt)("a",{parentName:"p",href:"https://mermaid.live/"},"Mermaid Live")," to edit the charts."),(0,a.kt)("mermaid",{value:'flowchart TD\nA[Control Channel] --\x3e|GRANT or UPDATE| B["handle_call_grant()"]\nB --\x3e C{Existing Call on Freq?}\nC -.->|Yes| D{Same Talkgroup?}\nC -.->|No| G["new Call()"]\nD -.->|Yes| E["call->update()"]\nD -.->|No| F[Do nothing.\\n The Recorder will notice the \\ndifferent Talkgroup and stop]\nG -.-> H["start_recording()"]'}),(0,a.kt)("mermaid",{value:'flowchart TD\nA1[Voice Channel] --\x3e B1[Transmission Sink]\nB1 -.->|Samples| C1{State}\nB1 -.->|GROUP ID| V1{GROUP ID \\n==\\nCALL TG}\nV1 -.->|Mismatch|Q1{Sample\\nCount}\nQ1 -.->|0| R1[state = IGNORE]\nQ1 -.->|>0| S1[End Transmission]\nS1 --\x3e T1[state = STOPPED]\nC1 -.->|STOPPED| D1[Drop Samples]\nC1 -.->|IGNORE| D1\nC1 -.->|IDLE| F1["Setup files\\nstate = RECORDING"]\nC1 -.->|RECORDING| G1[Write Samples]\nG1 --\x3e U1[Update d_last_write_time]\nF1 -.-> G1\nB1 -.->|TERMINATOR| H1["End Transmission"]\nH1 -.-> K1["state = IDLE"]'}),(0,a.kt)("mermaid",{value:'flowchart TD\nA[For Each Call] --\x3e|Call| B{state}\n\nB -.->|RECORDING| C{call->last_update > 3.0 &&\\nrecroder->d_last_write_time > 3.0}  \nC -.->|True| H["Conclude Call"]\nC -.->|False| D[Next]\nB -.->|MONITORING| F{"last_update > 3.0"}  \nF -.->|True| G["Delete Call"]\nG -.-> D\nF -.->|False| D\nH -.-> Z["Delete Call"]\nZ -.-> D'}))}m.isMDXComponent=!0}}]);